({
    getReportData : function(component) {        
        var action=component.get('c.getReportList');        
        action.setCallback(this,function(response){   
            if(response.getState()=='SUCCESS'){
                var records = response.getReturnValue();
               var listlength = records.length;
               /*for(var i=0;i<listlength;i++)
               {
                  //  alert(records[i].Favourite__c);
                   if(records[i].Favourite__c == 'false')
                   {
                     component.set("v.favBool","Fav");
                   }
               }*/
            
               // console.log('Reports List-->'+JSON.stringify(response));
                component.set("v.reportlist",response.getReturnValue());                
            }
            else 
            {
                console.log('Errroor-->'+JSON.stringify(response.getError()));
            }
            var rcds = component.get("v.reportList");
            console.log('Recordss-->'+JSON.stringify(rcds));
        });
        $A.enqueueAction(action);        
    },
    downloadSelectedCase2 :function(component, event,helper){
      /*  var recordsList=component.get("v.reportlist");
        var csv = helper.convertListToCSV(component, recordsList);
        if (csv == null){return;}
        // Create a temporal <a> html tag to download the CSV file
        var hiddenElement = document.createElement('a');
        hiddenElement.href = 'data:text/pdf;charset=utf-8,' + encodeURI(csv);
        hiddenElement.target = '_self';
        hiddenElement.download ='ReportExportData.csv';;
        document.body.appendChild(hiddenElement);
        // using click() js function to download csv file
        hiddenElement.click();
        var tempid = event.getSource().get("v.class");
        var parseVar = tempid;
     
         component.set("v.testList",parseVar);
        
        
         var recordsList=component.get("v.testList");*/
         var recordsList = component.get("v.demoList");
         var csv = helper.convertListToCSV(component, recordsList);
         if (csv == null){return;}
         // Create a temporal <a> html tag to download the CSV file
         var hiddenElement = document.createElement('a');
         hiddenElement.href = 'data:text/pdf;charset=utf-8,' + encodeURI(csv);
         hiddenElement.target = '_self';
         hiddenElement.download ='ReportExportData.csv';;
         document.body.appendChild(hiddenElement);
         // using click() js function to download csv file
         hiddenElement.click();
    },
    convertListToCSV : function(component, sObjectList){
        if (sObjectList == null || sObjectList.length == 0) {
            return null; // 
        }

        // CSV file parameters.
        var columnEnd = ',';
        var lineEnd =  '\n';

        // Get the CSV header from the list.
        var keys = new Set();
        sObjectList.forEach(function (record) {
            Object.keys(record).forEach(function (key) {
                keys.add(key);
            });
        });

        // 
        keys = Array.from(keys);

        var csvString = '';
        csvString += keys.join(columnEnd);
        csvString += lineEnd;

        for(var i=0; i < sObjectList.length; i++){
            var counter = 0;

            for(var sTempkey in keys) {
                var skey = keys[sTempkey] ;

                // add , after every value except the first.
                if(counter > 0){
                    csvString += columnEnd;
                }

                // If the column is undefined, leave it as blank in the CSV file.
                var value = sObjectList[i][skey] === undefined ? '' : sObjectList[i][skey];
                csvString += '"'+ value +'"';
                counter++;
            }

            csvString += lineEnd;
        }

        return csvString;
    },

    updateFavourite : function(component,event,helper)
    {
        var tempid = event.getSource().get("v.class");
       
        component.set("v.rcdId",tempid);
        var rcdIds = component.get("v.rcdId");
       // alert('myId'+rcdIds);
        var action = component.get("c.updateFavCheckbox");
        action.setParams({
            "recordId" : component.get("v.rcdId")
        });
        action.setCallback(this,function(response)
        {
            var state = response.getState();
            if(state === "SUCCESS")
            {
                //alert("Success");
                window.location.reload();
               
            }
            else 
            {
                console.log('Error updaye-->'+JSON.stringify(response.getError()));
            }
        });
        $A.enqueueAction(action);   
       
    },

    updateSubscribe : function(component,event,helper)
    {
        var tempid = event.getSource().get("v.class");
       
        component.set("v.rcdId",tempid);
        var rcdIds = component.get("v.rcdId");
        alert('myId'+rcdIds);
        var action = component.get("c.updateSubCheckbox");
        action.setParams({
            "recordId" : component.get("v.rcdId")
        });
        action.setCallback(this,function(response)
        {
            var state = response.getState();
            if(state === "SUCCESS")
            {
                alert("Success");
                window.location.reload();
            }
            else 
            {
                console.log('Error updaye-->'+JSON.stringify(response.getError()));
            }
        });
        $A.enqueueAction(action);   
        
    },

    handleRun : function(component,event,helper)
    {
        var url = window.location.origin + '/community/s/custom-report-detail';
        window.open(url,'_blank');
    },

    updateUnfavourite : function(component,event,helper)
    {
        var tempid = event.getSource().get("v.class");
       
        component.set("v.rcdId",tempid);
        var rcdIds = component.get("v.rcdId");
       // alert('myId'+rcdIds);
        var action = component.get("c.updateUnfavCheckbox");
        action.setParams({
            "recordId" : component.get("v.rcdId")
        });
        action.setCallback(this,function(response)
        {
            var state = response.getState();
            if(state === "SUCCESS")
            {
                //alert("Success");
                window.location.reload();
               
            }
            else 
            {
                console.log('Error updaye-->'+JSON.stringify(response.getError()));
            }
        });
        $A.enqueueAction(action);  
    }
   
})
